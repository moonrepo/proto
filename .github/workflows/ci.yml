# Bump!

name: CI

on:
  push:
    branches:
      - master
  pull_request:

jobs:
  format:
    name: Format
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
      fail-fast: false
    steps:
      - uses: actions/checkout@v4
      - uses: moonrepo/setup-rust@v1
        with:
          bins: just
          cache: false
          components: rustfmt
      - run: just format-check
  lint:
    name: Lint
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
      fail-fast: false
    steps:
      - uses: actions/checkout@v4
      - uses: moonrepo/setup-rust@v1
        with:
          bins: just
          cache: false
          components: clippy
      - run: just lint
      - run: just lint-wasm
  test:
    name: Test
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
      fail-fast: false
    steps:
      - uses: actions/checkout@v4
      - uses: moonrepo/setup-toolchain@v0
      - uses: moonrepo/setup-rust@v1
        with:
          bins: cargo-wasi, cargo-nextest, just
          cache-base: "^(master|develop-)"
      - if: ${{ runner.os != 'Windows' }}
        run: just build-wasm
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        # Windows runs out of disk space
      - if: ${{ runner.os == 'Windows' }}
        run: |
          just build-wasm;
          node .github/actions/delete-target-files.js;
      - run: just test-ci
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PROTO_DEBUG_COMMAND: 1
          RUST_BACKTRACE: 1
          WASMTIME_BACKTRACE_DETAILS: 1
  run:
    name: Run
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
      fail-fast: false
    steps:
      - uses: actions/checkout@v4
      - uses: moonrepo/setup-rust@v1
        with:
          bins: cargo-wasi, just
          cache-base: "^(master|develop-)"
      - run: just build
      - run: just build-wasm
      - run: cargo run -- --help
      - run: cargo run -- list-remote node
      - run: cargo run -- list-remote wasm-test
  build:
    name: Upload build
    runs-on: ${{ matrix.host }}
    strategy:
      matrix:
        include:
        - target: aarch64-unknown-linux-gnu
          host: ubuntu-latest
        - target: x86_64-unknown-linux-gnu
          host: ubuntu-latest
        - target: x86_64-apple-darwin
          host: macos-latest
        - target: aarch64-apple-darwin
          host: macos-latest
        - target: x86_64-pc-windows-msvc
          host: windows-latest
      fail-fast: false
    steps:
      - uses: actions/checkout@v4
      - if: ${{matrix.target == 'aarch64-unknown-linux-gnu'}}
        run: sudo apt-get install gcc-aarch64-linux-gnu
      - uses: moonrepo/setup-rust@v1
        with:
          targets: ${{ matrix.target }}
          cache-target: release
      - run: rustup target list --installed
      - run: rustup target add ${{ matrix.target }}
      - run: rustup target list --installed
      - run:
          cargo install --root artifacts --path ./crates/cli --target ${{ matrix.target }}
      - uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.target }}
          path: artifacts
          retention-days: 7
