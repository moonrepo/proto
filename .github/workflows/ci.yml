# Bump!

name: CI

on:
  push:
    branches:
      - master
  pull_request:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # For setup-rust
  WARPGATE_PLUGINS_DIR: ${{ github.workspace }}/plugins

jobs:
  codegen:
    name: Codegen
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: moonrepo/setup-rust@v1
        with:
          cache: false
      - run: cargo run -p proto_codegen
  format:
    name: Format
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
      fail-fast: false
    steps:
      - uses: actions/checkout@v4
      - uses: moonrepo/setup-rust@v1
        with:
          bins: just
          cache: false
          components: rustfmt
      - run: just format-check
  lint:
    name: Lint
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
      fail-fast: false
    steps:
      - uses: actions/checkout@v4
      - uses: moonrepo/setup-rust@v1
        with:
          bins: just
          cache: false
          components: clippy
      - run: just lint
      - run: just lint-wasm
  test:
    name: Test
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
      fail-fast: false
    steps:
      - uses: actions/checkout@v4
      - uses: moonrepo/setup-toolchain@v0
      - uses: moonrepo/setup-rust@v1
        with:
          bins: cargo-wasi, cargo-nextest, just
          cache: false
          # cache: ${{ runner.os != 'Linux' }}
          # cache-base: "^(master|develop-)"
          targets: wasm32-wasip1
      - if: ${{ runner.os != 'Windows' }}
        run: just build-wasm
        # Windows runs out of disk space
      - if: ${{ runner.os == 'Windows' }}
        run: |
          just build-wasm;
          node .github/actions/delete-target-files.js;
      - run: just test-ci
        env:
          PROTO_DEBUG_COMMAND: 1
          RUST_BACKTRACE: 1
          WASMTIME_BACKTRACE_DETAILS: 1
  run:
    name: Run
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
      fail-fast: false
    steps:
      - uses: actions/checkout@v4
      - uses: moonrepo/setup-rust@v1
        with:
          bins: cargo-wasi, just
          cache: false
          # cache-base: "^(master|develop-)"
          targets: wasm32-wasip1
      - run: just build
      - run: just build-wasm
      - run: cargo run -- --help
      - run: cargo run -- versions node
      - run: cargo run --features test-plugins -- versions protostar
