# Bump!

name: CI

on:
  push:
    branches:
      - master
  pull_request:

jobs:
  format:
    name: Format
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
      fail-fast: false
    steps:
      - uses: actions/checkout@v4
      - uses: moonrepo/setup-rust@v1
        with:
          cache: false
          components: rustfmt
      - run: cargo fmt --all --check
  lint:
    name: Lint
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
      fail-fast: false
    steps:
      - uses: actions/checkout@v4
      - uses: moonrepo/setup-rust@v1
        with:
          cache: false
          components: clippy
      - run: cargo clippy --workspace --all-targets
      - run: cd plugins && cargo clippy --workspace --all-targets
  test:
    name: Test
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
      fail-fast: false
    steps:
      - uses: actions/checkout@v4
      - uses: moonrepo/setup-toolchain@v0
      - uses: moonrepo/setup-rust@v1
        with:
          bins: cargo-wasi, cargo-nextest
          cache-base: "^(master|develop-)"
      - if: ${{ runner.os != 'Windows' }}
        run: cd plugins && cargo wasi build -p proto_wasm_test
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        # Windows runs out of disk space
      - if: ${{ runner.os == 'Windows' }}
        run: |
          cd plugins;
          cargo wasi build -p proto_wasm_test;
          node ../.github/actions/delete-target-files.js;
      - run: cargo nextest run --workspace --exclude proto_pdk --profile ci --config-file ./.cargo/nextest.toml
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PROTO_DEBUG_COMMAND: 1
          RUST_BACKTRACE: 1
          WASMTIME_BACKTRACE_DETAILS: 1
  run:
    name: Run
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
      fail-fast: false
    steps:
      - uses: actions/checkout@v4
      - uses: moonrepo/setup-rust@v1
        with:
          bins: cargo-wasi
          cache-base: "^(master|develop-)"
      - run: cd plugins && cargo wasi build -p proto_wasm_test
      - run: cargo run -- --help
      - run: cargo run -- list-remote node
      - run: cargo run -- list-remote wasm-test
